import t from"bitcoind-rpc";import e from"chai";import s from"sinon";import n from"sinon-chai";import{Computer as r}from"@bitcoin-computer/lib";import a from"fs";import{backOff as o}from"exponential-backoff";import{createLogger as i,format as c,transports as l}from"winston";import f from"dotenv";import d from"is-primitive";import u from"is-plain-object";import p from"os";import{dirname as y}from"path";import{fileURLToPath as b}from"url";import m from"util";import h from"@bitcoin-computer/bitcore-lib-ltc";import g from"pg-promise";import w from"pg-monitor";const{deleteProperty:v}=Reflect;const S=d;const T=u;const E=t=>"object"==typeof t&&null!==t||"function"==typeof t;const R=t=>{if(!S(t))throw new TypeError("Object keys must be strings or symbols");if((t=>"__proto__"===t||"constructor"===t||"prototype"===t)(t))throw new Error(`Cannot set unsafe key: "${t}"`)};const N=(t,e)=>e&&"function"==typeof e.split?e.split(t):"symbol"==typeof t?[t]:Array.isArray(t)?t:((t,e,s)=>{const n=(t=>Array.isArray(t)?t.flat().map(String).join(","):t)(e?((t,e)=>{if("string"!=typeof t||!e)return t;let s=t+";";return void 0!==e.arrays&&(s+=`arrays=${e.arrays};`),void 0!==e.separator&&(s+=`separator=${e.separator};`),void 0!==e.split&&(s+=`split=${e.split};`),void 0!==e.merge&&(s+=`merge=${e.merge};`),void 0!==e.preservePaths&&(s+=`preservePaths=${e.preservePaths};`),s})(t,e):t);R(n);const r=O.cache.get(n)||s();return O.cache.set(n,r),r})(t,e,(()=>((t,e={})=>{const s=e.separator||".";const n="/"!==s&&e.preservePaths;if("string"==typeof t&&!1!==n&&/\//.test(t))return[t];const r=[];let a="";const o=t=>{let e;""!==t.trim()&&Number.isInteger(e=Number(t))?r.push(e):r.push(t)};for(let e=0;e<t.length;e++){const n=t[e];"\\"!==n?n!==s?a+=n:(o(a),a=""):a+=t[++e]}return a&&o(a),r})(t,e)));const $=(t,e,s,n)=>{if(R(e),void 0===s)v(t,e);else if(n&&n.merge){const r="function"===n.merge?n.merge:Object.assign;r&&T(t[e])&&T(s)?t[e]=r(t[e],s):t[e]=s}else t[e]=s;return t};const O=(t,e,s,n)=>{if(!e||!E(t))return t;const r=N(e,n);let a=t;for(let t=0;t<r.length;t++){const e=r[t];const o=r[t+1];if(R(e),void 0===o){$(a,e,s,n);break}"number"!=typeof o||Array.isArray(a[e])?(E(a[e])||(a[e]={}),a=a[e]):a=a[e]=[]}return t};O.split=N,O.cache=new Map,O.clear=()=>{O.cache=new Map};var _=O;var x=a;var A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};var I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t};var H=function(){function t(t,e){for(var s=0;s<e.length;s++){var n=e[s];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,s,n){return s&&t(e.prototype,s),n&&t(e,n),e}}();var M=function t(e,s){var n=s.indexOf(".");if(!~n){if(null==e)return;return e[s]}var r=s.substring(0,n),a=s.substring(n+1);if(null!=e)return e=e[r],a?t(e,a):e},C=_,k=function(t,e){if("function"!=typeof e)return JSON.parse(x.readFileSync(t));x.readFile(t,"utf-8",(function(t,s){try{s=JSON.parse(s)}catch(e){t=t||e}e(t,s)}))},P=a,F=p;var B=function(){function t(e,s){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=s=s||{},s.stringify_width=s.stringify_width||2,s.stringify_fn=s.stringify_fn||null,s.stringify_eol=s.stringify_eol||!1,s.ignore_dots=s.ignore_dots||!1,this.path=e,this.data=this.read()}return H(t,[{key:"set",value:function(t,e,s){var n=this;return"object"===(void 0===t?"undefined":I(t))?function(t,e){var s=0,n=[];if(Array.isArray(t))for(;s<t.length&&!1!==e(t[s],s);++s);else if("object"===(void 0===t?"undefined":A(t))&&null!==t)for(n=Object.keys(t);s<n.length&&!1!==e(t[n[s]],n[s]);++s);}(t,(function(t,e){C(n.data,e,t,s)})):this.options.ignore_dots?this.data[t]=e:C(this.data,t,e,s),this.options.autosave&&this.save(),this}},{key:"get",value:function(t){return t?this.options.ignore_dots?this.data[t]:M(this.data,t):this.toObject()}},{key:"unset",value:function(t){return this.set(t,void 0)}},{key:"append",value:function(t,e){var s=this.get(t);if(s=void 0===s?[]:s,!Array.isArray(s))throw new Error("The data is not an array!");return s.push(e),this.set(t,s),this}},{key:"pop",value:function(t){var e=this.get(t);if(!Array.isArray(e))throw new Error("The data is not an array!");return e.pop(),this.set(t,e),this}},{key:"read",value:function(t){if(!t)try{return k(this.path)}catch(t){return{}}k(this.path,(function(e,s){t(null,s=e?{}:s)}))}},{key:"write",value:function(t,e){return e?P.writeFile(this.path,t,e):P.writeFileSync(this.path,t),this}},{key:"empty",value:function(t){return this.write("{}",t)}},{key:"save",value:function(t){var e=JSON.stringify(this.data,this.options.stringify_fn,this.options.stringify_width,this.options.stringify_eol);return this.write(this.options.stringify_eol?e+F.EOL:e,t),this}},{key:"toObject",value:function(){return this.data}}]),t}();f.config();const L=new B(`${y(b(import.meta.url))}/../../package.json`,{stringify_eol:!0});const{PORT:W,ZMQ_URL:D,CHAIN:K,NETWORK:j,BCN_ENV:G,BCN_URL:U,DEBUG_MODE:q,POSTGRES_USER:Y,POSTGRES_PASSWORD:z,POSTGRES_DB:V,POSTGRES_HOST:Z,POSTGRES_PORT:X,RPC_PROTOCOL:J,RPC_USER:Q,RPC_PASSWORD:tt,RPC_HOST:et,RPC_PORT:st,SERVER_VERSION:nt,DEFAULT_WALLET:rt,SYNC_INTERVAL_CHECK:at,POSTGRES_MAX_PARAM_NUM:ot,DB_CONNECTION_RETRY_TIME:ct,SIGNATURE_FRESHNESS_MINUTES:lt,ALLOWED_RPC_METHODS:ft,NODE_MAX_PROGRESS:dt,SYNC_MAX_PROGRESS:ut,MAX_BLOCKCHAIN_HEIGHT:pt,MWEB_HEIGHT:yt,BC_START_HEIGHT:bt,WORKER_ID:mt,NUM_WORKERS:ht,SYNC_NON_STANDARD:gt,ZMQ_WAIT_PERCENTAGE:wt}=process.env;const vt=K||"LTC";const St=j||"regtest";const Tt=G||"dev";const Et=U||"http://127.0.0.1:3000";const Rt=parseInt(q,10)||1;const Nt=Y||"bcn";const $t=z||"bcn";const Ot=V||"bcn";const _t=Z||"127.0.0.1";const xt=parseInt(X,10)||"5432";const At=J||"http";const It=Q||"bcn-admin";const Ht=tt||"kH4nU5Okm6-uyC0_mA5ztVNacJqZbYd_KGLl6mx722A=";const Mt=et||"node";const Ct=parseInt(st,10)||19332;const kt=nt||L.get("version");const Pt=rt||"defaultwallet";const Ft=parseInt(ot,10)||1e4;!ft||ft.split(",").map((t=>new RegExp(t)));const Bt=parseInt(pt||"",10)||2538171;const Lt=parseInt(yt||"",10)||432;const Wt=parseInt(wt||"",10)||.7;const Dt=i({level:["error","warn","info","http","verbose","debug","silly"][Rt],format:c.json(),transports:[new l.Console({format:c.combine(c.colorize(),c.timestamp({format:"MM-DD-YYYY HH:mm:ss"}),c.printf((t=>`[2m${t.timestamp}[0m ${t.level} ${t.message}`)))})],exceptionHandlers:[new l.File({filename:"logs/exceptions.log"})],rejectionHandlers:[new l.File({filename:"logs/rejections.log"})]});const Kt={maxFiles:1,maxSize:1e5};Rt>=0&&Dt.add(new l.File({filename:"error.log",level:"error"})),Rt>=1&&Dt.add(new l.File({filename:"logs/warn.log",level:"warn",...Kt})),Rt>=2&&Dt.add(new l.File({filename:"logs/info.log",level:"info",...Kt})),Rt>=3&&Dt.add(new l.File({filename:"logs/http.log",level:"http",...Kt})),Rt>=4&&Dt.add(new l.File({filename:"logs/verbose.log",level:"verbose",...Kt})),Rt>=5&&Dt.add(new l.File({filename:"logs/debug.log",level:"debug",...Kt}));const jt=new t({protocol:At,user:It,pass:Ht,host:Mt,port:Ct});const Gt=m.promisify(t.prototype.createwallet.bind(jt));const Ut=m.promisify(t.prototype.generateToAddress.bind(jt));const qt=m.promisify(t.prototype.getaddressinfo.bind(jt));const Yt=m.promisify(t.prototype.getBlock.bind(jt));const zt=m.promisify(t.prototype.getBlockchainInfo.bind(jt));const Vt=m.promisify(t.prototype.getBlockHash.bind(jt));const Zt=m.promisify(t.prototype.getRawTransaction.bind(jt));const Xt=m.promisify(t.prototype.getTransaction.bind(jt));const Jt=m.promisify(t.prototype.getNewAddress.bind(jt));const Qt={createwallet:Gt,generateToAddress:Ut,getaddressinfo:qt,getBlock:Yt,getBlockchainInfo:zt,getBlockHash:Vt,getRawTransaction:Zt,getTransaction:Xt,importaddress:m.promisify(t.prototype.importaddress.bind(jt)),listunspent:m.promisify(t.prototype.listunspent.bind(jt)),sendRawTransaction:m.promisify(t.prototype.sendRawTransaction.bind(jt)),getNewAddress:Jt,sendToAddress:m.promisify(t.prototype.sendToAddress.bind(jt))};const te={error:(t,e)=>{if(e.cn){const{host:s,port:n,database:r,user:a,password:o}=e.cn;Dt.debug(`Waiting for db to start { message:${t.message} host:${s}, port:${n}, database:${r}, user:${a}, password: ${o}`)}},noWarnings:!0};"dev"===Tt&&Rt>0&&(w.isAttached()?w.detach():(w.attach(te),w.setTheme("matrix")));const ee=g(te)({host:_t,port:xt,database:Ot,user:Nt,password:$t,allowExitOnIdle:!0,idleTimeoutMillis:100});const{PreparedStatement:se}=g;class ne{static async select(t){const e=new se({name:`Input.select.${Math.random()}`,text:'SELECT "rev" FROM "Input" WHERE "rev" = $1',values:[t]});return ee.any(e)}static async insert(t){const e=t.flatMap((t=>[t.rev]));for(;e.length;){const t=e.splice(0,Ft);const s=[];for(let e=1;e<=t.length;e+=1)s.push(`($${e})`);const n=s.join(",");const r=new se({name:`Input.insert.${Math.random()}`,text:`INSERT INTO "Input"("rev") VALUES ${n}  ON CONFLICT DO NOTHING`,values:t});await ee.none(r)}}static async count(t){const e=t.map((t=>t.rev));const s=new se({name:`Input.belong.${Math.random()}`,text:'SELECT count(*) FROM "Input" WHERE "rev" LIKE ANY ($1)',values:[[e]]});const n=await ee.oneOrNone(s);return parseInt(n?.count,10)||0}}class re{static async select(t){return ne.select(t)}static async insert(t){return ne.insert(t)}}const{Transaction:ae}=h;const{Input:oe}=ae;class ie{static getNonCoinbaseRevs=t=>t.map((t=>oe.fromObject({...t,script:t._scriptBuffer}))).filter((t=>!t.isNull())).map((({prevTxId:t,outputIndex:e})=>({rev:`${t.toString("hex")}/${e}`})));static insert=async t=>re.insert(this.getNonCoinbaseRevs(t))}const{PreparedStatement:ce}=g;class le{static async select(t){const e=new ce({name:`Output.select.${Math.random()}`,text:'SELECT "address", "satoshis", "scriptPubKey", "rev" FROM "Output" WHERE "address" = $1',values:[t]});return ee.any(e)}static async insert(t){const e=t.flatMap((t=>[t.rev,t.address,t.satoshis,t.scriptPubKey]));for(;e.length;){const t=e.splice(0,Ft);const s=[];for(let e=1;e<=t.length;e+=4)s.push(`($${e}, $${e+1}, $${e+2}, $${e+3})`);const n=s.join(",");const r=new ce({name:`Output.insert.${Math.random()}`,text:`INSERT INTO "Output"("rev", "address", "satoshis", "scriptPubKey") VALUES ${n}  ON CONFLICT DO NOTHING`,values:t});await ee.none(r)}}}class fe{static async select(t){return le.select(t)}static async insert(t){return le.insert(t)}}class de{static insert=async t=>{const e=t.flatMap((t=>t.tx.outputs.map(((e,s)=>{const{script:n}=e;let r="false";!1===n.isMultisigOut()&&(r=n.toAddress(St).toString("legacy")),"false"===r&&(r=null);const a=n.toHex();const o=Math.round(e.satoshis);return{address:r,rev:`${t.txId}/${s}`,scriptPubKey:a,satoshis:o}}))));return fe.insert(e)}}const{PreparedStatement:ue}=g;class pe{static async query(t){const{publicKey:e,classHash:s,limit:n,offset:r,order:a}=t;if(void 0===e&&void 0===s)return[];let o='SELECT "rev"\n      FROM "NonStandard"\n      WHERE true ';const i=[];e&&(i.push(e),o+=' AND $1 = ANY ("publicKeys")'),s&&(i.push(s),o+=` AND "classHash" = $${i.length}`),a&&(o+=` order by "lastUpdated" ${a}`),n&&(o+=` limit ${n}`),r&&(o+=` offset ${r}`);const c=new ue({name:`NonStandard.query.${Math.random()}`,text:o,values:i});return(await ee.any(c)).map((t=>t.rev))}static async insert({id:t,rev:e,publicKeys:s,classHash:n}){const r=new ue({name:`NonStandard.insert.${Math.random()}`,text:'INSERT INTO "NonStandard"("id", "rev", "publicKeys", "classHash") VALUES ($1, $2, $3, $4) ON CONFLICT DO NOTHING',values:[t,e,s,n]});await ee.none(r)}static async update({id:t,rev:e,publicKeys:s}){const n=new ue({name:`NonStandard.update.${Math.random()}`,text:'UPDATE "NonStandard" SET "rev"=$2, "publicKeys"=$3 WHERE "id" = $1',values:[t,e,s]});return ee.none(n)}static async getRevsByIds(t){const e=new ue({name:`NonStandard.getRevsByIds.${Math.random()}`,text:'SELECT "rev" FROM "NonStandard" WHERE "id" LIKE ANY($1)',values:[[t]]});return ee.any(e)}static async select(t){const e=new ue({name:`NonStandard.select.${Math.random()}`,text:'SELECT "id", "classHash" FROM "NonStandard" WHERE "rev" = $1',values:[t]});return ee.oneOrNone(e)}}class ye{static async select(t){return pe.select(t)}static async query(t){return pe.query(t)}static async getRevsByIds(t){return pe.getRevsByIds(t)}static async insert(t){return pe.insert(t)}static async update(t){return pe.update(t)}}const{crypto:be}=h;class me{static add=async t=>{const{zip:e,outData:s}=t;await Promise.all(e.map((async([t,e],n)=>{const{exp:r="",_owners:a=[]}=s[n]||{};if(null===t&&e)return/^[0-9A-Fa-f]{64}\/\d+$/.test(e),void await ye.insert({id:e,rev:e,publicKeys:a,classHash:be.Hash.sha256(Buffer.from(r)).toString("hex")});if(e&&t){const{id:s,classHash:n}=await ye.select(t)||{};await ye.update({id:s,rev:e,publicKeys:a,classHash:n})}})))};static query=async t=>ye.query(t);static getRevsByIds=async t=>(await ye.getRevsByIds(t)).map((t=>t.rev))}const he=new r({chain:vt,network:St,url:Et});class ge{static syncTx=async t=>{await de.insert([t]),await ie.insert(t.tx.inputs),t.isBcTx()&&await me.add(t)};static rawTxSubscriber=async t=>{try{const e=t.toString("hex");Dt.info(`ZMQ message { rawTx:${e} }`),"dev"===Tt&&a.appendFileSync("zmqlog.log",`${e} \r\n`);const s=await he.db.fromTxHex(e);try{await this.syncTx(s)}catch(t){Dt.error(`Error parsing transaction ${t.message} ${t.stack}`)}}catch(t){Dt.error(`RawTxSubscriber failed with error '${t.message} ${t.stack}'`)}};static checkSyncStatus=async()=>{const t=await o((async()=>{const t=await Qt.getBlockchainInfo();const e=(100*parseFloat(t.result.verificationprogress)).toFixed(4);const{blocks:s}=t.result;if(Dt.info(`Zmq. Bitcoind { percentage:${e}%, blocks:${s} }`),parseFloat(t.result.verificationprogress)<=Wt)throw new Error("Node not ready yet");return t}),{startingDelay:6e4,timeMultiple:1,numOfAttempts:8760});const e=(100*parseFloat(t.result.verificationprogress)).toFixed(4);const s=t.result.blocks;Dt.info(`BCN reaches sync end...at { bitcoind.progress:${e}%, bitcoindSyncedHeight:${s} }`)};static createWallet=async()=>{try{await Qt.createwallet(Pt)}catch(t){Dt.debug(`Wallet creation failed with error '${t.message}'`)}};static sub=async t=>{try{await this.createWallet(),"regtest"!==St&&await this.checkSyncStatus(),await(async()=>{if("LTC"===vt&&"regtest"===St){Dt.info(`Node is starting for chain ${vt} and network ${St}, \n\n Starting MWEB setup.`);const{result:t}=await Qt.getBlockchainInfo();const e=t.blocks;if(e<Lt){const{result:t}=await Qt.getNewAddress("","legacy");const s=Lt-e-1;s&&await Qt.generateToAddress(s,t);const{result:n}=await Qt.getNewAddress("mweb","mweb");await Qt.sendToAddress(n,1),await Qt.generateToAddress(1,t)}Dt.info("MWEB setup is complete")}})(),Dt.info(`Bitcoin Computer Node is ready on version: ${kt} MAX_BLOCKCHAIN_HEIGHT: ${Bt}`);for await(const[,e]of t)await this.rawTxSubscriber(e)}catch(t){Dt.error(`ZMQ subscription failed with error '${t.message}'`)}}}e.use(n);const{expect:we}=e;afterEach((()=>{s.restore()})),describe("zmqsub",(()=>{describe("rawTxSubscriber",(()=>{it("Should ignore a standard rawtx",(async()=>{const e="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704ffff001d0104ffffffff0100f2052a0100000043410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac00000000";const n="0e3e2357e806b6cdb1f70b54c3a3a17b6714ee1f0e68bebb44a74b1efd512098";const r={txid:n,hash:"906c7434c759c8baf9bea2429a849942143cbed7bae22d34086bbfbafff2c582",version:1,vin:[],vout:[{value:50,n:0,scriptPubKey:{hex:"410496b538e853519c726a2c91e61ec11600ae1390813a627c66fb8be7947be63c52da7589379515d4e0a604f8141781e62294721166bf621e73a82cbf2342c858eeac",addresses:["12c6DSiU4Rq3P4ZxziKxzrL5LmMBrzjrJX"]},txId:n}],nLockTime:0};const a={};a[e]=r;const o=s.stub(de,"insert").resolves();const i=s.stub(me,"add");const c=s.stub(t.prototype,"decodeRawTransaction").callsFake(((t,e)=>{e(null,{result:a[t]})}));await ge.rawTxSubscriber(e),we(i.called).to.be.false,i.restore(),c.restore(),o.restore()})),it("Should sync a coinbase testnet rawtx",(async()=>{const e="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0b03c58c01062f503253482fffffffff0386600f27010000001976a914dde4906f870df11cf316b15adb628a3c3cc9883988ac8ab8f60200000000434104ffd03de44a6e11b9917f3a29f9443283d9871c9d743ef30d5eddcd37094b64d1b3d8090496b53256786bf5c82932ec23c3b74d9f05a6f95a8b5529352656664bac00000000000000002a6a28e73cd21eb4ac1eb1ba3767f4bf12be98935656451df3d6dee34c125662bcd599000000000000010000000000";const n=new r;const a=await n.db.fromTxHex(e);const o={};o[e]=a;const i=s.stub(de,"insert").resolves();const c=s.stub(ie,"insert").resolves();const l=s.stub(me,"add").resolves();const f=s.stub(t.prototype,"decodeRawTransaction").callsFake(((t,e)=>{e(null,{result:o[t]})}));await ge.rawTxSubscriber(e),we(i.args[0][0][0].tx.outputs.length).to.eq(a.tx.outputs.length),we(c.calledWith(a.tx.inputs)).to.be.true,we(l.called).to.be.false,f.restore(),i.restore(),c.restore(),l.restore()})),it("Should sync another coinbase testnet rawtx",(async()=>{const e="01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0b03c58c01062f503253482fffffffff0386600f27010000001976a914dde4906f870df11cf316b15adb628a3c3cc9883988ac8ab8f60200000000434104ffd03de44a6e11b9917f3a29f9443283d9871c9d743ef30d5eddcd37094b64d1b3d8090496b53256786bf5c82932ec23c3b74d9f05a6f95a8b5529352656664bac00000000000000002a6a28e73cd21eb4ac1eb1ba3767f4bf12be98935656451df3d6dee34c125662bcd599000000000000010000000000";const n=new r;const a=await n.db.fromTxHex(e);const o={};o[e]=a;const i=s.stub(de,"insert").resolves();const c=s.stub(ie,"insert").resolves();const l=s.stub(me,"add").resolves();const f=s.stub(t.prototype,"decodeRawTransaction").callsFake(((t,e)=>{e(null,{result:o[t]})}));await ge.rawTxSubscriber(e),we(i.args[0][0][0].tx.outputs.length).to.eq(a.tx.outputs.length),we(c.calledWith(a.tx.inputs)).to.be.true,we(l.called).to.be.false,f.restore(),i.restore(),c.restore(),l.restore()}))}))}));
